/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package cs;

import org.junit.Test;

import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.io.PrintStream;

import org.apache.commons.io.output.TeeOutputStream;
import org.assertj.core.api.AutoCloseableSoftAssertions;

public class StringLabTest {
    
	private String runTestWithTeeStream(Runnable runnable) {
		//Replaces System.out with a new Stream that also captures to a ByteArrayOutputStream
		PrintStream orig = System.out;
		ByteArrayOutputStream baos = new ByteArrayOutputStream();
		OutputStream teeOutputStream = new TeeOutputStream(orig, baos);
		
		PrintStream teePrintStream = new PrintStream(teeOutputStream);
		System.setOut(teePrintStream);
		
		//Run method that is passed in
		runnable.run();
		
		//Restores System.out to original object
		System.setOut(orig);
		
		//return captured input
		return baos.toString();
	}
	
	@Test
    public void test_problem_1() {
		String actualString = runTestWithTeeStream(
				() -> StringLab.printStringFacts("Virginia!")
				);
		
		try(AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {
			softly.assertThat(actualString).contains("The character at index 3 is: 'g'");
			softly.assertThat(actualString).contains("The substring of the string \"Virginia!\" is \"a!\"");
			softly.assertThat(actualString).contains("The index value at character \"n\" is 5");
			softly.assertThat(actualString).contains("The length of the string \"Virginia\" is: 9");
		}
    }    
	
	@Test
    public void test_problem_1_second_case() {
		String actualString = runTestWithTeeStream(
				() -> StringLab.printStringFacts("New York!")
				);
		
		try(AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {
			softly.assertThat(actualString).contains("The character at index 3 is: ' '");
			softly.assertThat(actualString).contains("The substring of the string \"New York!\" is \"k!\"");
			softly.assertThat(actualString).contains("The index value at character \"n\" is 0");
			softly.assertThat(actualString).contains("The length of the string \"New York!\" is: 9");
		}
    }    
	
	@Test
	public void test_problem_2() {
		try(AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {
			softly.assertThat(StringLab.countVowels("Spectacular")).isEqualTo(4);
			softly.assertThat(StringLab.countVowels("Richmond")).isEqualTo(2);
		}
	}
	
	@Test
	public void test_problem_3() {
		try(AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {
			softly.assertThat(StringLab.printInitials("Jonathan Murray Smith")).isEqualTo("J M Smith");

			softly.assertThat(StringLab.printInitials("Michael Gary Scott")).isEqualTo("M G Scott");
		}
	}
	
	@Test
	public void test_problem_4() {
		String[] input = new String[] {"Betting", "Better"};
		
		String[] actual = StringLab.sortWords(input);
		
		try(AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {
			softly.assertThat(actual).isNotSameAs(input);
			softly.assertThat(actual).containsExactly("Better", "Betting");
		}		
	}
	
	@Test
	public void test_problem_5() {
		String[] input = new String[] {"Betting", "Better"};
		
		StringLab.sortWordsInPlace(input);
		
		try(AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) {
			softly.assertThat(input).containsExactly("Better", "Betting");
		}		
	}
}
